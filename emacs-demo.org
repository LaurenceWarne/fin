#+TITLE: Emacs Demo
#+STARTUP:inlineimages

#+BEGIN_SRC elisp
  (require 'cl-lib)
  (require 'request)

    (defun get-data()
      (request "http://localhost:8080/api/graphql"
	:headers '(("Content-Type" . "application/json") ("Accept" . "application/json"))
					    ;:params '(("key" . "value") ("key2" . "value2"))
	:data "{\"query\":\"\\nquery {\\n  books(titleKeywords: \\\"hi\\\", authorKeywords: \\\"there\\\") {\\n    title\\n    author\\n    description\\n    thumbnailUri\\n  }\\n}\"}"
	:parser 'json-read
	:error
    (cl-function (lambda (&rest args &key error-thrown &allow-other-keys)
		   (message "Got error: %S" error-thrown)))
	:success (cl-function
		   (lambda (&key data &allow-other-keys)
                     (process-data (cdadar data))))))

    (defun process-data (data)
      (print (elt data 1)))

    (get-data)
#+END_SRC

curl 'http://localhost:8080/api/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:8080' --data-binary '{"query":"\nquery {\n  books(titleKeywords: \"hi\", authorKeywords: \"there\") {\n    title\n    author\n    description\n    thumbnailUri\n  }\n}"}' --compressed
* Books

  [[~/Pictures/flowers-for-algernon.jpeg]]  Flowers for Algernon

  
