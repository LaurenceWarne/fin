#+TITLE: Planning

* Scoping

** APIs

*** Google
Google Books API: https://developers.google.com/books/
relevant API doc: https://developers.google.com/books/docs/v1/using

Allows for searching by title, author and provides links for thumbnails.

Example:
#+BEGIN_SRC bash
curl -X GET 'https://www.googleapis.com/books/v1/volumes?q=intitle:flowers+inauthor:keyes'
#+END_SRC

*** Openlibrary

#+BEGIN_SRC bash
curl -X GET 'http://openlibrary.org/search.json?title=azkaban&fields=title,cover_edition_key,author_name,id_wikidata,isbn'
#+END_SRC

Then, you'd have to get the description through the works api.  The wikidata ids returned also seems to not be great.

**** Covers
#+BEGIN_SRC bash
curl -X GET 'https://covers.openlibrary.org/b/isbn/9780575097933-L.jpg'
#+END_SRC


*** [[https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial][Wikidata]]

Get series info from the isbn of one book in the series:

#+BEGIN_SRC sql
SELECT ?series ?seriesBook ?seriesBookLabel ?ordinal WHERE {
  ?book wdt:P212 '978-85-7657-049-3'.
  ?book wdt:P179 ?series.
  ?series wdt:P527 ?seriesBook.
  ?seriesBook p:P179 ?membership.
  ?membership pq:P1545 ?ordinal.
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en".}
}
#+END_SRC

Alternatively, get series info from the title/author:

#+BEGIN_SRC sql
SELECT ?book ?seriesBookLabel ?ordinal WHERE {
  ?book wdt:P31 wd:Q7725634.
  ?book wdt:P1476 "Harry Potter and the Prisoner of Azkaban"@en.
  ?book wdt:P50 ?author.
  ?author rdfs:label "J. K. Rowling"@en.
  ?book wdt:P179 ?series.
  ?series wdt:P527 ?seriesBook.
  ?seriesBook p:P179 ?membership.
  ?membership pq:P1545 ?ordinal.
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en".}
} limit 100
#+END_SRC


#+BEGIN_SRC bash
curl -H "Accept: application/json" -G https://query.wikidata.org/sparql --data-urlencode query="
SELECT ?series ?seriesBook ?seriesBookLabel ?ordinal WHERE {
  ?book wdt:P212 '978-85-7657-049-3'.
  ?book wdt:P179 ?series.
  ?series wdt:P527 ?seriesBook.
  ?seriesBook p:P179 ?membership.
  ?membership pq:P1545 ?ordinal.
  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'.}
}"
#+END_SRC

The problem here is that the returned isbns are no good since they point to french translations.  Proposed solution is to rely on author and title to fill in the data.

* TODO list

** Bigger things  
*** DONE Remove poc package
*** DONE Add test framework to sbt
*** DONE Add docker build (with docker-compose)
*** DONE Integrate with GH Actions
*** DONE db backend
*** TODO Import Goodreads shelves
*** TODO Import Calibre collections (what are they called??)
*** DONE Implement langRestrict
*** DONE Add asc/desc to collection sorting
*** DONE Implement adding to default collection
*** DONE Add integration tests
*** DONE Make isbn return multiple books

** Smaller Things
*** DONE Add a logging framework
*** DONE Log when decoding fails (ie with title: hi, author: there)
*** DONE Sort out logging middleware
*** DONE Add scalafix (for imports, etc)
*** DONE Decrease/investigate memory usage
*** DONE Get better errors than "Effect Failure"
*** DONE Add error classes for better testing than ~isLeft~
*** DONE Add typeclass to put objects into ~Bindings~
*** DONE Add logging to file in config directory
https://gist.github.com/greenlaw110/e32d0cb433ee89b12790ad75e94d3a91
*** DONE Add IOCaseApp for flags
*** DONE Add tracing
*** TODO Add cli option for just outputting the default config
*** DONE Replace betterfiles with fs2 File ops
*** TODO Why do we get mulitple:
18:29:07.639 [blaze-selector-0] INFO  o.h.b.c.nio1.NIO1SocketServerGroup - Accepted connection from /0:0:0:0:0:0:0:1:43412
*** DONE Log response timings on the INFO log level

** Bugs
*** DONE Adding the same book to a collection results in an uhelpful sql error
*** DONE Author search of 'tolkien' returns an error (bad google data?)
